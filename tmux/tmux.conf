# unbind some default keybindings
#unbind C-b
#

# set prefix key 
set -g prefix C-p
set-option -g default-shell /usr/local/bin/zsh

# lower command delay
set -sg escape-time 1

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."

# pass through a ctrl-a if you press it twice
#bind C-a send-prefix

# better mnemonics for splitting panes!
bind | split-window -h
bind - split-window -v

# vim / xmonad style bindings for pane movement
bind -r h select-pane -L
# bind -r j select-pane -D
# just grab the next pane with j
#bind j select-pane -t :.+
#bind k select-pane -t :.-
#bind k select-pane -U
#bind l select-pane -R

# vim / xmonad style bindings for window movement
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# disable mouse support (at least while we're learning)
#setw -g mode-mouse off
#set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off

#set-window-option -g mode-mouse off
#set-option -g mouse-select-pane off
#set-option -g mouse-resize-pane off
#set-option -g mouse-select-window off

# turn on 256 color support in tmux
set -g default-terminal "screen-256color"

# fiddle with colors of status bar
set -g status-fg white
set -g status-bg colour234

# fiddle with colors of inactive windows
setw -g window-status-fg cyan
setw -g window-status-bg colour234
setw -g window-status-attr dim

# change color of active window
setw -g window-status-current-fg white
setw -g window-status-current-bg colour88
setw -g window-status-current-attr bright

# set color of regular and active panes
set -g pane-border-fg colour238
set -g pane-border-bg default
set -g pane-active-border-fg green
set -g pane-active-border-bg default

# set color of command line
set -g message-fg white
set -g message-bg colour22
set -g message-attr bright

# configure contents of status bar
set -g status-utf8 on
set -g status-left-length 40
set -g status-left "#[fg=green]\"#S\""

set -g status-right "#[fg=green] #h | %d %b %R"

set -g status-justify centre
setw -g monitor-activity on
set -g visual-activity on

# navigate using vim-style keys
setw -g mode-keys vi

# copy/paste using vim-style keys
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection



#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour130 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour33 #base0
set-window-option -g window-status-bg colour235
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour196 #orange
#set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-bg colour235
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour46 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour196 #orange

# pane number display
set-option -g display-panes-active-colour colour20 #blue
set-option -g display-panes-colour colour196 #orange

# clock
set-window-option -g clock-mode-colour colour40 #green

#set-window-option -g mode-mouse on
#set -g mouse-select-pane on
#
#unbind -n C-k
unbind -n C-l
#unbind -n k
#unbind -n l
#unbind -n A-k
unbind -n C-i

# smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# smart pane switching without awareness of vim splits
bind -n C-h run "tmux select-pane -L"
bind -n C-j run "tmux select-pane -D"
bind -n C-k run "tmux select-pane -U"
bind -n C-l run "tmux select-pane -R"
bind -n C-\ run "tmux select-pane -l"

# Toggle mouse on with ^p m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^p M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# window movement into panes
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# pane movement between windows
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
