set nocompatible              " be iMproved, required
filetype off                  " required

" Make powerline always appear
set laststatus=2
set cursorline

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'altercation/vim-colors-solarized' " probably don't ever want to update this
"Plugin 'pangloss/vim-javascript'
Plugin 'digitaltoad/vim-pug.git' " jade templating engine syntax highlighting
Plugin 'vim-scripts/indentpython.vim'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
"Bundle 'Valloric/YouCompleteMe'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tmhedberg/SimpylFold' " proper folding for python files
" Haven't decided if I like powerline or airline better.  powerline seems to
" know about my git branch without install fugitive which is nice.
"Plugin 'vim-airline/vim-airline'
"Plugin 'vim-airline/vim-airline-themes'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"let g:airline_theme='solarized'
" Blayne's c-code formatter (interferes with my usual binding for =)
"set equalprg=clang-format
"

" See 
" http://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/ 
" for more stuff you should consider for vim buffers/tabs
" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

"set pastetoggle=<F5>
set pastetoggle=<F2>
set foldenable    
" stuff from http://items.sjbach.com/319/configuring-vim-right
set hidden
nnoremap ' `
nnoremap ` '
let mapleader = ","
runtime macros/matchit.vim " smarter % matching
set wildmenu
set wildmode=list:longest
set ignorecase
set smartcase 
set title
set backspace=indent,eol,start
 
"hi Folded ctermfg=DarkGreen ctermbg=Black
hi Folded ctermfg=DarkGreen 
set foldmethod=marker
set foldmarker={{{,}}}

" Syntax highlighting/solarized screwing around
syntax on

"if(strftime("%H") > 5 && strftime("%H") < 17)
"  set background=light 
"else
"  set background=dark
"endif

" KDR: Set for standard C projects; hopefully this will work
let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'

set background=dark
set t_Co=16
colorscheme solarized


" Arch linux VM specific (prevents annoying "Can't delete backup file"
" warnings
"set backupdir=~/.vim/backup
"set t_Co=256
"if &t_Co > 8        " if terminal supports colors
"   colors cdefault
"endif

":autocmd filetype *   set nocindent
":autocmd filetype c,h set formatoptions=cq cindent foldmethod=syntax " from GK

set tabstop=4       " change to 8 when reading old files
set shiftwidth=4
set expandtab       
set nowrap
set softtabstop=0
"smarttab

" pretty-print JSON files
" autocmd BufRead,BufNewFile *.json set filetype=json
" json.vim is here: http://www.vim.org/scripts/script.php?script_id=1945
" autocmd Syntax json sou ~/.vim/syntax/json.vim
" json_reformat is part of yajl: http://lloyd.github.com/yajl/
" autocmd FileType json set equalprg=json_reformat

"set foldmethod=indent " usually i do {{{,}}} 
"set foldexpr=getline(v:lnum)[0]==\"\\t\"    " everything that starts with a tab
"set foldexpr=getline(v:lnum)[0]==\"\^class\"    " everything that starts with a tab
"set foldnestmax=2   
"
"if you enter gqap in command mode it will re-align the current paragraph
"set textwidth=80  

" give the GUI a black background:
" highlight Normal guibg=Black guifg=White 
" or give it different settings: 
"if has("gui_running")
"    set bg=light                
"    set guifont=courier\ new   
"else
"    set bg=light
"endif
"set guioptions='gmrLtT'    " hwindows default options
"set guioptions='agimrLtT'   " gtk athena defaults
"set guioptions='agmrLtT'   " gtk athena defaults
set guioptions-=T   " get rid of the toolbar

set ruler           " Turn the ruler on
set nohlsearch      " Highlighting found search items is annoying
set incsearch       " Show search matches as you type
set nocompatible    " vi compatibility is weak
set autoindent      " auto-indenting 
set smartindent     " auto-indenting 
set history=1000    " keep 1000 commands in history
set undolevels=1000 " use many muchos levels of undo
set so=5            " start scrolling 5 lines before the end
set bs=2            " backspace over whatever you want to
set showmatch       " cursor will jump to maching ({[
"set virtualedit=all " can go anywhere in command mode... weird!


" When editing a file, always jump to the last cursor position. YES!
autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal g'\"" |
    \ endif

"autocmd BufEnter *.py, set et ts=4 sw=4 wm=8 autoindent foldmethod=indent
au BufEnter,BufNewFile,BufRead *.py set
    \ tabstop=4
    \ softtabstop=4
    \ shiftwidth=4
    \ textwidth=79
    \ expandtab
"    \ smarttab
    \ autoindent
    \ fileformat=unix

"\ foldmethod=indent
"highlight BadWhitespace ctermbg=red guibg=darkred
"au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" when editing makefiles, put in actual tabs
autocmd FileType make setlocal noexpandtab


" Autocompile coffee files as they are saved
"autocmd BufWritePost *.coffee silent CoffeeMake -b | cwindow

" GK's preferred latex colors (must have .vim/colors/latex.vim file)
":autocmd filetype tex :color latex
 
"KDR's old preferred latex colors
":autocmd filetype tex :color kdrtex
:autocmd filetype c,h set formatoptions=cq cindent foldmethod=syntax
:autocmd BufEnter *.tex set nosmartindent
let perl_fold = 1

"Make unicode work the way it should in the first place
if has("multi_byte")
  if &termencoding == ""
    let &termencoding = &encoding
  endif
  set encoding=utf-8
  setglobal fileencoding=utf-8
  "setglobal bomb
  set fileencodings=ucs-bom,utf-8,latin1
endif
"
" because i don't understand terminal settings but i want to see what it said.
" set title
" set titleold=Cygterm\ -\ PuttyCYG
" set paste

" abbreviations
:ab #p ################################################################################
:ab #c --------------------------------------------------------------------------------
:ab #b /*******************************************************************************
:ab #e *******************************************************************************/
:ab #d #define
:ab #i #include

iab YDATE <C-R>=strftime("%a %b %d %T %Z %Y")<CR>
iab DATE  <C-R>=strftime("%Y.%m.%d")<CR>

" Wrap paragraphs with =
:map = gqap

" seeligd: i don't ever use F1 to get to help. but i do hit it while trying to ESC.
:map <F1> <esc>
:imap <F1> <esc>

:map <F5> :make <CR>
:autocmd BufEnter *.tex map <F5> :!pdflatex % <CR>
set spell

" append date after the cursor when hitting F2 (command-mode):
":map <F2> a<C-R>=strftime("%c")<CR><Esc>

":function Roundf(n)
": let l = search("\d*","cn",line(".")) 
": let line = getline(".")
": let repl = substitute(line, '\(\d*\.\d*\)', round(submatch(0)), "")
": echo round(0.089)
":endfunction
" useful commands:
" remove CR from a dos file:
" :%s/{Ctrl+V}{Ctrl+M}//{Enter}
